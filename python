https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/
https://www.fomfus.com/articles/how-to-use-email-as-username-for-django-authentication-removing-the-username/

python -m venv env
--for windows only
.\env\Scripts\activate
--linux/mac
sourc env_name/bin/activate
deactivate

run inside virtual env
pip3 freeze > requirements.txt

pipenv --venv

```
ctrl + shirt + p == Format Document, Select Linter
.vscode-> settings.json {
    "python.linting.pylintArgs": [
        "--load-plugins=pylint_django",
        "--disable=C0111",
        "--django-settings-module=<mainapp>.settings"
    ],
    "[python]": {
        "editor.defaultFormatter": "ms-python.autopep8"
    },
    "python.formatting.provider": "none",
    "editor.formatOnSave": true
}
```

```
pip install pre-commit
pre-commit install

.pre-commit-config.yaml

repos:
-   repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black
-   repo: https://github.com/asottile/seed-isort-config
    rev: v2.2.0
    hooks:
    - id: seed-isort-config
-   repo: https://github.com/pre-commit/mirrors-isort
    rev: v5.7.0
    hooks:
    - id: isort
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.4.0
    hooks:
    -   id: trailing-whitespace
    -   id: check-added-large-files
-   repo: https://github.com/pycqa/flake8
    rev: 3.8.4
    hooks:
    -   id: flake8
default_language_version:
    python: python3.8
```



pip list
pip install pipenv

pipenv= pip + virtualenv

pipenv install requests
pipenv --venv
pipenv shell
pipenv graph --list of all installed packeage
pipenv update --outdated --list out the updated package
pipenv update package_name

pipenv install opencv-python


pipenv install django

after install django
run pip freeze and get the install packages
make a requirements.txt file and list down the packages


pipenv shell
django-admin startproject vidly .
python manage.py startapp listings

--------------
python manage.py help
python manage.py createsuperuser
python manage.py runserver

 python manage.py collectstatic(make folder named static(anythings) inside root folder)
 python manage.py migrate
 python manage.py makemigrations

 ----------------
 postgres 
 -----------
 pip install psycopg2
 pip install psycopg2-binary
 pip install Pillow (for images)
 -----------
 postgresdb
 postgres app
 pgadmin

 -------------------
  pip install pylint-django
 .pylintrc file ->> load-plugins=pylint-django

 ------------------------------
 for mysql
 --------------
 pip install mysqlclient
 'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'mydb',
        'USER': 'root',
        'PASSWORD': 'YOUR_DB_PASSWORD',
        'HOST': 'localhost',   
        'PORT': '3306',

---------------REST------
pipenv install djangorestframework
pipenv shell
pipenv install django-cors-headers

Environment Variable in django
-------------------------------
os.environ.get('variable_name')
