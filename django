

export pdf, excel, csv ->>https://www.youtube.com/watch?v=ai9J71DlLhk

python -m venv env
--for windows only
.\env\Scripts\activate
--linux/mac
sourc env_name/bin/activate
deactivate

---------------
pip install pipenv
pipenv install django

after install django

pipenv shell
exit --> to exit from shell
pipenv --venv
django-admin startproject vidly .
python manage.py startapp listings

python manage.py runserver
python manage.py runserver 9000

```
create account app and paste it for extending user model

from django.contrib.auth.models import AbstractUser
from django.db import models

# Create your models here.


class User(AbstractUser):
    email = models.EmailField(unique=True)
```

run inside virtual env
pip3 freeze > requirements.txt

--------------
python manage.py help
python manage.py createsuperuser
python manage.py runserver

 python manage.py collectstatic(make folder named static(anythings) inside root folder)
 python manage.py migrate
 python manage.py makemigrations

.\env\Scripts\activate
docker-compose up -d  
docker-compose up -d --build
docker-compose down 
docker-compose down -v
docker-compose -f docker-compose.prod.yml down -v
docker-compose -f docker-compose.prod.yml up -d --build
docker-compose -f docker-compose.prod.yml exec api python manage.py migrate --noinput
docker-compose -f docker-compose.prod.yml exec api python manage.py collectstatic --no-input --clear
docker-compose exec api python manage.py createsuperuser
docker-compose exec api python manage.py startapp playground
python manage.py startapp listings

docker-compose exec db psql --username=postgres  --dbname=flowcode_dev

\l
\c hello_django_dev  (db_name)
\dt 
\q

python manage.py dumpdata > data.json
python manage.py shell

from django.contrib.contenttypes.models import ContentType
ContentType.objects.all().delete()
python manage.py loaddata data.json


sudo docker-compose -f docker-compose.dev.yml  up --build -d
sudo docker-compose -f docker-compose.dev.yml down 

sudo docker-compose -f docker-compose.stage.yml  up --build -d
sudo docker-compose -f docker-compose.stage.yml down 

docker-compose -f docker-compose.dev.yml exec api python manage.py test


